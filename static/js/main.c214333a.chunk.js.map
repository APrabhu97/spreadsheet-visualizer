{"version":3,"sources":["services/sutdent-util.service.tsx","components/card/card.component.tsx","components/card-container/card-container.component.tsx","components/app-body/app-body.component.tsx","services/login.service.tsx","services/spreadsheet.service.tsx","components/login/login.component.tsx","components/drawer.tsx","components/app-container/app-container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StudentUtilService","cell","formattedValue","cells","finalizedUic","this","getCellData","commuteTimeOptions","split","roomType","roommateNumberPreferences","roomNumberPreferences","mixedHouse","roommateSmokes","roommateDrinks","knowsCooking","foodType","roommateLanguagePreference","origin","gradYear","hobbies","extraInfo","visaLocation","company","experience","intrestedAreas","socialMediaLinks","budget","smoke","drink","data","students","length","forEach","row","idx","values","student","email","name","phone","gender","details","getStudentDetails","push","CardComponent","props","Card","className","CardContent","Typography","variant","component","cardView","phoneNumber","emailId","CardContainer","cards","cardDetails","map","card","AppBodyComponent","LoginService","isSignedIn$","BehaviorSubject","handleSignInClick","loggedIn","getValue","gapi","auth2","getAuthInstance","load","initClient","signIn","console","log","handleSignOutClick","signOut","handleClientLoad","isSignedIn","asObservable","updateSigninStatus","localStorage","setItem","toString","next","API_KEY","process","CLIENT_ID","client","init","apiKey","clientId","discoveryDocs","scope","then","response","listen","get","error","SpreadsheetService","data$","ReplaySubject","UIC_CS_SHEET","UIC_GENERAL_SHEET","getSpreadsheetData","params","spreadsheetId","ranges","includeGridData","sheets","spreadsheets","rowData","result","reason","message","LoginComponent","destroy$","useRef","Subject","loginService","useState","isLoggedIn","_setLoggedIn","isLoggedInRef","spreadsheetService","useEffect","current","destroy","pipe","tap","signedIn","onDataLoaded","takeUntil","subscribe","loginButton","Button","color","onClick","drawerWidth","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","classes","useTheme","open","setOpen","spreadsheetData","setSpreadsheetData","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Menu","noWrap","Drawer","anchor","paper","direction","ChevronLeft","ChevronRight","Divider","List","text","index","ListItem","button","ListItemText","primary","toStudent","AppContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c214333a.chunk.js","sourcesContent":["import { RoomType, Student, StudentDetails } from \"../models/student.model\";\r\nimport { SpreadsheetCell, SpreadsheetRow } from \"./spreadsheet.model\";\r\n\r\nexport class StudentUtilService {\r\n  private static getCellData(cell: SpreadsheetCell): string {\r\n    return cell ? (cell.formattedValue ? cell.formattedValue : \"\") : \"\";\r\n  }\r\n\r\n  private static getStudentDetails(cells: SpreadsheetCell[]): StudentDetails {\r\n    return {\r\n      finalizedUic: this.getCellData(cells[5]),\r\n      commuteTimeOptions: this.getCellData(cells[6]).split(\",\") as any,\r\n      roomType: this.getCellData(cells[7]) as RoomType,\r\n      roommateNumberPreferences: this.getCellData(cells[8]) as any,\r\n      roomNumberPreferences: this.getCellData(cells[9]) as any,\r\n      mixedHouse: this.getCellData(cells[10]) as any,\r\n      roommateSmokes: this.getCellData(cells[11]) as any,\r\n      roommateDrinks: this.getCellData(cells[12]) as any,\r\n      knowsCooking: this.getCellData(cells[13]) as any,\r\n      foodType: this.getCellData(cells[14]) as any,\r\n      roommateLanguagePreference: this.getCellData(cells[16]),\r\n      origin: this.getCellData(cells[17]).split(\",\")[0],\r\n      gradYear: this.getCellData(cells[17]).split(\",\")[1],\r\n      hobbies: this.getCellData(cells[18]),\r\n      extraInfo: this.getCellData(cells[19]),\r\n      visaLocation: this.getCellData(cells[20]),\r\n      company: this.getCellData(cells[21]).split(\",\")[0],\r\n      experience: this.getCellData(cells[21]).split(\",\")[1],\r\n      intrestedAreas: this.getCellData(cells[23]),\r\n      socialMediaLinks: this.getCellData(cells[22]),\r\n      budget: this.getCellData(cells[26]),\r\n      smoke: this.getCellData(cells[27]) as any,\r\n      drink: this.getCellData(cells[28]) as any,\r\n    };\r\n  }\r\n\r\n  public static toStudent(data: SpreadsheetRow[] | undefined): Student[] {\r\n    const students: Student[] = [];\r\n    if (data && data.length > 1) {\r\n      //row 0 is names\r\n      //0th element of every row is timestamp\r\n      //every row is 1 student\r\n      data.forEach((row, idx) => {\r\n        const values = row.values;\r\n        if (idx !== 0) {\r\n          const student: Student = {\r\n            email: this.getCellData(values[1]),\r\n            name: this.getCellData(values[2]),\r\n            phone: this.getCellData(values[3]),\r\n            gender: this.getCellData(values[4]),\r\n            details: this.getStudentDetails(values),\r\n          };\r\n          students.push(student);\r\n        }\r\n      });\r\n    }\r\n    return students;\r\n  }\r\n}\r\n","import { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { CardDetail } from \"./card.model\";\r\nimport \"./card.component.scss\";\r\ninterface Props {\r\n  cardView: CardDetail;\r\n}\r\n\r\nexport default function CardComponent(props: Props) {\r\n  return (\r\n    <Card className=\"card-detail\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Name\r\n        </Typography>\r\n        {props.cardView.name}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Gender\r\n        </Typography>\r\n        {props.cardView.gender}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Number\r\n        </Typography>\r\n        {props.cardView.phoneNumber}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Email\r\n        </Typography>\r\n        {props.cardView.emailId}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CardComponent from \"../card/card.component\";\r\nimport { CardDetail } from \"../card/card.model\";\r\nimport \"./card-container.component.scss\";\r\n\r\ninterface Props {\r\n  cardDetails: CardDetail[] | undefined;\r\n}\r\n\r\nexport default function CardContainer(props: Props) {\r\n  const cards = props.cardDetails?.map((card) => (\r\n    <span className=\"card\" key={card.phoneNumber}>\r\n      <CardComponent cardView={card} />\r\n    </span>\r\n  ));\r\n  return <div className=\"card-container\">{cards}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Student } from \"../../models/student.model\";\r\nimport CardContainer from \"../card-container/card-container.component\";\r\nimport { CardDetail } from \"../card/card.model\";\r\n\r\ninterface Props {\r\n  data: Student[] | undefined;\r\n}\r\n\r\nexport default function AppBodyComponent(props: Props) {\r\n  const toCardDetails = (\r\n    data: Student[] | undefined\r\n  ): CardDetail[] | undefined => {\r\n    return data?.map((student) => {\r\n      return {\r\n        emailId: student.email,\r\n        name: student.name,\r\n        phoneNumber: student.phone,\r\n        gender: student.gender,\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <CardContainer cardDetails={toCardDetails(props.data)} />\r\n    </div>\r\n  );\r\n}\r\n","import { gapi } from \"gapi-script\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\nexport class LoginService {\r\n  isSignedIn$ = new BehaviorSubject(false);\r\n\r\n  public handleSignInClick = () => {\r\n    const loggedIn = this.isSignedIn$.getValue();\r\n    if (!gapi.auth2.getAuthInstance()) {\r\n      gapi.load(\"client:auth2\", this.initClient());\r\n    }\r\n    if (!loggedIn) {\r\n      gapi.auth2.getAuthInstance()?.signIn();\r\n    }\r\n    if (loggedIn) {\r\n      console.log(\"Already Logged In\");\r\n    }\r\n  };\r\n\r\n  public handleSignOutClick = () => {\r\n    gapi.auth2.getAuthInstance().signOut();\r\n  };\r\n\r\n  public handleClientLoad = () => {\r\n    gapi.load(\"client:auth2\", this.initClient());\r\n  };\r\n\r\n  public isSignedIn = (): Observable<boolean> => {\r\n    return this.isSignedIn$.asObservable();\r\n  };\r\n\r\n  private updateSigninStatus = (isSignedIn: boolean) => {\r\n    localStorage.setItem(\"login\", isSignedIn.toString());\r\n    this.isSignedIn$.next(isSignedIn);\r\n  };\r\n\r\n  private initClient = () => {\r\n    const API_KEY = `${process.env.REACT_APP_SHEET_API_KEY}`;\r\n    const CLIENT_ID = `${process.env.REACT_APP_SHEET_CLIENT_ID}`;\r\n    const SCOPE = \"https://www.googleapis.com/auth/spreadsheets.readonly\";\r\n    gapi.client\r\n      ?.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: [\r\n          \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\r\n        ],\r\n        scope: SCOPE,\r\n      })\r\n      .then(\r\n        (response: any) => {\r\n          // Listen for sign-in state changes.\r\n          gapi.auth2\r\n            .getAuthInstance()\r\n            .isSignedIn.listen(this.updateSigninStatus);\r\n\r\n          // Handle the initial sign-in state.\r\n          this.updateSigninStatus(\r\n            gapi.auth2.getAuthInstance().isSignedIn.get()\r\n          );\r\n\r\n          gapi.auth2.getAuthInstance().signIn();\r\n        },\r\n        (error: Error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  };\r\n}\r\n","import { gapi } from \"gapi-script\";\r\nimport { Observable, ReplaySubject } from \"rxjs\";\r\nimport { SpreadsheetRow } from \"./spreadsheet.model\";\r\n\r\nexport class SpreadsheetService {\r\n  private data$ = new ReplaySubject<SpreadsheetRow[]>();\r\n  UIC_CS_SHEET = \"1ysrPxFihdRTRTHc4tKQZnmjCeq_JoSqEK4IE9EPnJX8\";\r\n  UIC_GENERAL_SHEET = '1iRbHoRSJaKoJNDCKeTZ2kREXPHQL7qZma73-AfQReO0'\r\n  getSpreadsheetData = (): Observable<SpreadsheetRow[]> => {\r\n    const params = {\r\n      spreadsheetId: this.UIC_CS_SHEET, //given in url of the sheet\r\n      ranges: [\"Form Responses 1\"], //names of the page(given in the bottom of google sheets).\r\n      includeGridData: true,\r\n    };\r\n\r\n    const request = gapi.client.sheets.spreadsheets.get(params);\r\n    request.then(\r\n      (response: any) => {\r\n        const rowData: SpreadsheetRow[] =\r\n          response?.result?.sheets[0]?.data[0]?.rowData;\r\n        console.log(rowData);\r\n        this.data$.next(rowData);\r\n      },\r\n      (reason: any) => {\r\n        console.error(\"error: \" + reason.result.error.message);\r\n      }\r\n    );\r\n    return this.data$.asObservable();\r\n  };\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil, tap } from \"rxjs/operators\";\r\nimport { LoginService } from \"../../services/login.service\";\r\nimport { SpreadsheetRow } from \"../../services/spreadsheet.model\";\r\nimport { SpreadsheetService } from \"../../services/spreadsheet.service\";\r\n\r\ninterface Props {\r\n  onDataLoaded: (data: SpreadsheetRow[]) => void;\r\n}\r\n\r\nexport default function LoginComponent(props: Props) {\r\n  const destroy$ = useRef(new Subject());\r\n  const loginService = useRef(new LoginService());\r\n  const [isLoggedIn, _setLoggedIn] = useState(false);\r\n  const isLoggedInRef = useRef(false);\r\n  const setLoggedIn = (loggedIn: boolean) => {\r\n    _setLoggedIn(loggedIn);\r\n    isLoggedInRef.current = loggedIn;\r\n  };\r\n  const spreadsheetService = useRef(new SpreadsheetService());\r\n\r\n  useEffect(() => {\r\n    loginService.current.handleClientLoad();\r\n    const destroy = destroy$.current;\r\n    loginService.current\r\n      .isSignedIn()\r\n      .pipe(\r\n        tap((signedIn) => {\r\n          setLoggedIn(signedIn);\r\n          if (signedIn) {\r\n            spreadsheetService.current\r\n              .getSpreadsheetData()\r\n              .pipe(\r\n                tap((data) => props.onDataLoaded(data)),\r\n                takeUntil(destroy$.current)\r\n              )\r\n              .subscribe();\r\n          }\r\n        }),\r\n        takeUntil(destroy)\r\n      )\r\n      .subscribe();\r\n    return () => {\r\n      destroy.next();\r\n    };\r\n  }, []);\r\n\r\n  const loginButton = (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={() => loginService.current.handleSignInClick()}\r\n    >\r\n      Login\r\n    </Button>\r\n  );\r\n  return <div>{isLoggedIn ? null : loginButton}</div>;\r\n}\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ChevronLeft, ChevronRight, Menu } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport { SpreadsheetRow } from \"../services/spreadsheet.model\";\r\nimport { StudentUtilService } from \"../services/sutdent-util.service\";\r\nimport AppBodyComponent from \"./app-body/app-body.component\";\r\nimport LoginComponent from \"./login/login.component\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const [spreadsheetData, setSpreadsheetData] = useState<SpreadsheetRow[]>();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            UIC Housing Form Visualizer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? <ChevronLeft /> : <ChevronRight />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              {/*  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n\r\n        <LoginComponent onDataLoaded={setSpreadsheetData} />\r\n        <AppBodyComponent\r\n          data={StudentUtilService.toStudent(spreadsheetData)}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PersistentDrawerLeft from \"../drawer\";\r\nimport \"./app-container.scss\";\r\n\r\nexport default function AppContainer() {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <PersistentDrawerLeft />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport AppContainer from './components/app-container/app-container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}