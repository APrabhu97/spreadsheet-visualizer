{"version":3,"sources":["services/sutdent-util.service.tsx","components/card/card.component.tsx","components/card-container/card-container.component.tsx","components/app-body/app-body.component.tsx","services/filters-util.service.tsx","components/app-drawer/app-drawer.component.tsx","services/spreadsheet.service.tsx","components/gapi-login.tsx","components/header/header.tsx","components/app-container/app-container.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StudentUtilService","cell","formattedValue","cells","gender","this","getCellData","finalizedUic","commuteTimeOptions","split","roomType","roommateNumberPreferences","roomNumberPreferences","mixedHouse","roommateSmokes","roommateDrinks","knowsCooking","foodType","roommateLanguagePreference","origin","gradYear","hobbies","extraInfo","visaLocation","company","experience","intrestedAreas","socialMediaLinks","budget","smoke","drink","data","students","length","forEach","row","idx","values","student","email","name","phone","details","getStudentDetails","push","CardComponent","props","Card","className","CardContent","Typography","variant","component","cardView","phoneNumber","emailId","CardContainer","cards","cardDetails","map","card","AppBodyComponent","FiltersUtilService","allFilters","filter","Array","isArray","field","concat","displayValue","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","useStyles","makeStyles","theme","createStyles","drawerPaper","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","AppDrawer","classes","useState","selectedFilterNames","setSelectedFilterNames","useMemo","getAllFilters","allStudentsList","Drawer","anchor","open","drawerOpenState","paper","IconButton","onClick","onDrawerClosed","ChevronLeft","Divider","InputLabel","id","Select","labelId","multiple","value","onChange","event","target","renderValue","selected","MenuItem","Checkbox","checked","includes","ListItemText","primary","List","text","index","ListItem","button","SpreadsheetService","data$","ReplaySubject","UIC_CS_SHEET","UIC_GENERAL_SHEET","CLIENT_ID","process","SCOPE","getSpreadsheetData","params","spreadsheetId","ranges","includeGridData","gapi","client","sheets","spreadsheets","get","then","response","rowData","result","console","log","next","reason","error","message","asObservable","GoogleLogin","user","setUser","useEffect","a","loadAuth2","auth2","isSignedIn","updateUser","currentUser","attachSignin","document","getElementById","setAuth2","getBasicProfile","getName","profileImg","getImageUrl","getData","loadClientAuth2","API_KEY","init","apiKey","clientId","discoveryDocs","scope","cli","onDataLoaded","element","attachClickHandler","googleUser","JSON","stringify","butt","Button","color","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","Header","AppBar","position","clsx","Toolbar","aria-label","onDrawerOpened","edge","Menu","noWrap","root","drawer","flexShrink","content","flexGrow","contentShift","AppContainer","isDrawerOpen","setDrawerOpen","selectedStudents","setSelectedStudents","allStudents","setAllStudents","toStudent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a1c7a96.chunk.js","sourcesContent":["import { RoomType, Student, StudentDetails } from \"../models/student.model\";\r\nimport { SpreadsheetCell, SpreadsheetRow } from \"./spreadsheet.model\";\r\n\r\nexport class StudentUtilService {\r\n  private static getCellData(cell: SpreadsheetCell): string {\r\n    return cell ? (cell.formattedValue ? cell.formattedValue : \"\") : \"\";\r\n  }\r\n\r\n  private static getStudentDetails(cells: SpreadsheetCell[]): StudentDetails {\r\n    return {\r\n        gender: this.getCellData(cells[4]),\r\n      finalizedUic: this.getCellData(cells[5]),\r\n      commuteTimeOptions: this.getCellData(cells[6]).split(\",\"),\r\n      roomType: this.getCellData(cells[7]),\r\n      roommateNumberPreferences: this.getCellData(cells[8]).split(\",\"),\r\n      roomNumberPreferences: this.getCellData(cells[9]).split(\",\"),\r\n      mixedHouse: this.getCellData(cells[10]),\r\n      roommateSmokes: this.getCellData(cells[11]),\r\n      roommateDrinks: this.getCellData(cells[12]),\r\n      knowsCooking: this.getCellData(cells[13]),\r\n      foodType: this.getCellData(cells[14]),\r\n      roommateLanguagePreference: this.getCellData(cells[16]),\r\n      origin: this.getCellData(cells[17]).split(\",\")[0],\r\n      gradYear: this.getCellData(cells[17]).split(\",\")[1],\r\n      hobbies: this.getCellData(cells[18]),\r\n      extraInfo: this.getCellData(cells[19]),\r\n      visaLocation: this.getCellData(cells[20]),\r\n      company: this.getCellData(cells[23]).split(\",\")[0],\r\n      experience: this.getCellData(cells[23]).split(\",\")[1],\r\n      intrestedAreas: this.getCellData(cells[24]),\r\n      socialMediaLinks: this.getCellData(cells[25]),\r\n      budget: this.getCellData(cells[28]),\r\n      smoke: this.getCellData(cells[29]),\r\n      drink: this.getCellData(cells[30]),\r\n    };\r\n  }\r\n\r\n  public static toStudent(data: SpreadsheetRow[] | undefined): Student[] {\r\n    const students: Student[] = [];\r\n    if (data && data.length > 1) {\r\n      //row 0 is names\r\n      //0th element of every row is timestamp\r\n      //every row is 1 student\r\n      data.forEach((row, idx) => {\r\n        const values = row.values;\r\n        if (idx !== 0) {\r\n          const student: Student = {\r\n            email: this.getCellData(values[1]),\r\n            name: this.getCellData(values[2]),\r\n            phone: this.getCellData(values[3]),\r\n            gender: this.getCellData(values[4]),\r\n            details: this.getStudentDetails(values),\r\n          };\r\n          students.push(student);\r\n        }\r\n      });\r\n    }\r\n    return students;\r\n  }\r\n}\r\n","import { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { CardDetail } from \"./card.model\";\r\nimport \"./card.component.scss\";\r\ninterface Props {\r\n  cardView: CardDetail;\r\n}\r\n\r\nexport default function CardComponent(props: Props) {\r\n  return (\r\n    <Card className=\"card-detail\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Name\r\n        </Typography>\r\n        {props.cardView.name}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Gender\r\n        </Typography>\r\n        {props.cardView.gender}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Number\r\n        </Typography>\r\n        {props.cardView.phoneNumber}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Email\r\n        </Typography>\r\n        {props.cardView.emailId}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CardComponent from \"../card/card.component\";\r\nimport { CardDetail } from \"../card/card.model\";\r\nimport \"./card-container.component.scss\";\r\n\r\ninterface Props {\r\n  cardDetails: CardDetail[] | undefined;\r\n}\r\n\r\nexport default function CardContainer(props: Props) {\r\n  const cards = props.cardDetails?.map((card) => (\r\n    <span className=\"card\" key={card.phoneNumber}>\r\n      <CardComponent cardView={card} />\r\n    </span>\r\n  ));\r\n  return <div className=\"card-container\">{cards}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Student } from \"../../models/student.model\";\r\nimport CardContainer from \"../card-container/card-container.component\";\r\nimport { CardDetail } from \"../card/card.model\";\r\n\r\ninterface Props {\r\n  data: Student[] | undefined;\r\n}\r\n\r\nexport default function AppBodyComponent(props: Props) {\r\n  const toCardDetails = (\r\n    data: Student[] | undefined\r\n  ): CardDetail[] | undefined => {\r\n    return data?.map((student) => {\r\n      return {\r\n        emailId: student.email,\r\n        name: student.name,\r\n        phoneNumber: student.phone,\r\n        gender: student.gender,\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <CardContainer cardDetails={toCardDetails(props.data)} />\r\n    </div>\r\n  );\r\n}\r\n","import { AllFiltersOption } from \"../models/filters.model\";\r\nimport { Student } from \"../models/student.model\";\r\n\r\nexport class FiltersUtilService {\r\n  private static allFilters: AllFiltersOption[] = [\r\n    { displayValue: \"Gender\", values: [], field: \"gender\" },\r\n    {\r\n      displayValue: \"Commute Time\",\r\n      values: [],\r\n      field: \"commuteTimeOptions\",\r\n    },\r\n    { displayValue: \"Room Type\", values: [], field: \"roomType\" },\r\n    {\r\n      displayValue: \"No. of Rooms\",\r\n      values: [],\r\n      field: \"roomNumberPreferences\",\r\n    },\r\n    {\r\n      displayValue: \"No. of Roommates\",\r\n      values: [],\r\n      field: \"roommateNumberPreferences\",\r\n    },\r\n    { displayValue: \"Mixed Accommodation\", values: [], field: \"mixedHouse\" },\r\n    {\r\n      displayValue: \"Roommate smoking preference\",\r\n      values: [],\r\n      field: \"roommateSmokes\",\r\n    },\r\n    {\r\n      displayValue: \"Roommate drinking preference\",\r\n      values: [],\r\n      field: \"roommateDrinks\",\r\n    },\r\n    { displayValue: \"Cooking Knowledge\", values: [], field: \"knowsCooking\" },\r\n    { displayValue: \"Food Choice\", values: [], field: \"foodType\" },\r\n    {\r\n      displayValue: \"Roommate language preference\",\r\n      values: [],\r\n      field: \"roommateLanguagePreference\",\r\n    },\r\n    { displayValue: \"Origin\", values: [], field: \"origin\" },\r\n    { displayValue: \"Grad year\", values: [], field: \"gradYear\" },\r\n    { displayValue: \"Hobbies\", values: [], field: \"hobbies\" },\r\n    { displayValue: \"Company\", values: [], field: \"company\" },\r\n    { displayValue: \"Housing Budget\", values: [], field: \"budget\" },\r\n  ];\r\n\r\n  public static getAllFilters(students: Student[]): AllFiltersOption[] {\r\n    students.forEach((student) => {\r\n      this.allFilters.forEach((filter) => {\r\n        Array.isArray(student.details[filter.field])\r\n          ? filter.values.concat(...(student.details[filter.field] as any[]))\r\n          : filter.values.push(student.details[filter.field] as string);\r\n      });\r\n    });\r\n    return this.allFilters;\r\n  }\r\n}\r\n","import {\r\n  Checkbox,\r\n  createStyles,\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  InputLabel,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { ChevronLeft } from \"@material-ui/icons\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { Student } from \"../../models/student.model\";\r\nimport { FiltersUtilService } from \"../../services/filters-util.service\";\r\nimport \"./app-drawer.component.scss\";\r\n\r\ninterface Props {\r\n  onDrawerClosed: () => void;\r\n  drawerOpenState: boolean;\r\n  allStudentsList: Student[];\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function AppDrawer(props: Props) {\r\n  const classes = useStyles();\r\n  const [selectedFilterNames, setSelectedFilterNames] = useState<string[]>([]);\r\n  const allFilters = useMemo(\r\n    () => FiltersUtilService.getAllFilters(props.allStudentsList),\r\n    [props.allStudentsList]\r\n  );\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSelectedFilterNames(event.target.value as string[]);\r\n  };\r\n  return (\r\n    <Drawer\r\n      className=\"drawer\"\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={props.drawerOpenState}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={() => props.onDrawerClosed()}>\r\n          <ChevronLeft />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <div className=\"all-filter-container\">\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Select Filters</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-checkbox-label\"\r\n          id=\"demo-mutiple-checkbox\"\r\n          multiple\r\n          className=\"all-filter-select\"\r\n          value={selectedFilterNames}\r\n          onChange={handleChange}\r\n          renderValue={(selected) => (selected as []).length + \" selected\"}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allFilters.map((filter) => (\r\n            <MenuItem key={filter.field} value={filter.displayValue}>\r\n              <Checkbox\r\n                checked={selectedFilterNames.includes(filter.displayValue)}\r\n              />\r\n              <ListItemText primary={filter.displayValue} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            {/*  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n","import { gapi } from \"gapi-script\";\r\nimport { Observable, ReplaySubject } from \"rxjs\";\r\nimport { SpreadsheetRow } from \"./spreadsheet.model\";\r\n\r\nexport class SpreadsheetService {\r\n  private data$ = new ReplaySubject<SpreadsheetRow[]>();\r\n  UIC_CS_SHEET = \"1ysrPxFihdRTRTHc4tKQZnmjCeq_JoSqEK4IE9EPnJX8\";\r\n  UIC_GENERAL_SHEET = \"1iRbHoRSJaKoJNDCKeTZ2kREXPHQL7qZma73-AfQReO0\";\r\n  CLIENT_ID = `${process.env.REACT_APP_SHEET_CLIENT_ID}`;\r\n  SCOPE = \"https://www.googleapis.com/auth/spreadsheets.readonly\";\r\n  //gapiClient = loadClientAuth2(gapi, this.CLIENT_ID, this.SCOPE);\r\n  getSpreadsheetData = (): Observable<SpreadsheetRow[]> => {\r\n    const params = {\r\n      spreadsheetId: this.UIC_CS_SHEET, //given in url of the sheet\r\n      ranges: [\"Form Responses 1\"], //names of the page(given in the bottom of google sheets).\r\n      includeGridData: true,\r\n    };\r\n    const request = gapi.client.sheets.spreadsheets.get(params);\r\n    request.then(\r\n      (response: any) => {\r\n        const rowData: SpreadsheetRow[] =\r\n          response?.result?.sheets[0]?.data[0]?.rowData;\r\n        console.log(rowData);\r\n        this.data$.next(rowData);\r\n      },\r\n      (reason: any) => {\r\n        console.error(\"error: \" + reason.result.error.message);\r\n      }\r\n    );\r\n    return this.data$.asObservable();\r\n  };\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { gapi, loadAuth2, loadClientAuth2 } from \"gapi-script\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SpreadsheetRow } from \"../services/spreadsheet.model\";\r\nimport { SpreadsheetService } from \"../services/spreadsheet.service\";\r\n\r\ninterface Props {\r\n  onDataLoaded: (data: SpreadsheetRow[]) => void;\r\n}\r\nexport const GoogleLogin = (props: Props) => {\r\n  const [user, setUser] = useState<any>(null);\r\n  const service = new SpreadsheetService();\r\n  useEffect(() => {\r\n    const setAuth2 = async () => {\r\n      const auth2 = await loadAuth2(\r\n        gapi,\r\n        process.env.REACT_APP_SHEET_CLIENT_ID!,\r\n        process.env.REACT_APP_SHEET_SCOPE!\r\n      );\r\n      if (auth2.isSignedIn.get()) {\r\n        updateUser(auth2.currentUser.get());\r\n      } else {\r\n        attachSignin(document.getElementById(\"customBtn\"), auth2);\r\n      }\r\n    };\r\n    setAuth2();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const setAuth2 = async () => {\r\n        const auth2 = await loadAuth2(\r\n          gapi,\r\n          process.env.REACT_APP_SHEET_CLIENT_ID!,\r\n          process.env.REACT_APP_SHEET_SCOPE!\r\n        );\r\n        attachSignin(document.getElementById(\"customBtn\"), auth2);\r\n      };\r\n      setAuth2();\r\n    }\r\n  }, [user]);\r\n\r\n  const updateUser = (currentUser: any) => {\r\n    const name = currentUser.getBasicProfile().getName();\r\n    const profileImg = currentUser.getBasicProfile().getImageUrl();\r\n    setUser({\r\n      name: name,\r\n      profileImg: profileImg,\r\n    });\r\n    getData();\r\n  };\r\n\r\n  const getData = async () => {\r\n    const gapiClient = await loadClientAuth2(\r\n      gapi,\r\n      process.env.REACT_APP_SHEET_CLIENT_ID!,\r\n      process.env.REACT_APP_SHEET_SCOPE!\r\n    );\r\n    const params = {\r\n      spreadsheetId: \"1ysrPxFihdRTRTHc4tKQZnmjCeq_JoSqEK4IE9EPnJX8\", //given in url of the sheet\r\n      ranges: [\"Form Responses 1\"], //names of the page(given in the bottom of google sheets).\r\n      includeGridData: true,\r\n    };\r\n    const API_KEY = `${process.env.REACT_APP_SHEET_API_KEY}`;\r\n    const CLIENT_ID = `${process.env.REACT_APP_SHEET_CLIENT_ID}`;\r\n    gapi.client\r\n      ?.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: [\r\n          \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\r\n        ],\r\n        scope: process.env.REACT_APP_SHEET_SCOPE!,\r\n      })\r\n      .then((cli: any) => {\r\n        const req = gapi.client.sheets.spreadsheets.get(params);\r\n        req.then((response: any) => {\r\n          const rowData: SpreadsheetRow[] =\r\n            response?.result?.sheets[0]?.data[0]?.rowData;\r\n          props.onDataLoaded(rowData);\r\n          console.log(rowData);\r\n        });\r\n      });\r\n\r\n    /*     service\r\n      .getSpreadsheetData()\r\n      .pipe(tap((data) => props.onDataLoaded(data)))\r\n      .subscribe(); */\r\n  };\r\n\r\n  const attachSignin = (element: any, auth2: any) => {\r\n    auth2.attachClickHandler(\r\n      element,\r\n      {},\r\n      (googleUser: any) => {\r\n        updateUser(googleUser);\r\n      },\r\n      (error: any) => {\r\n        console.log(JSON.stringify(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  const butt = (\r\n    <div className=\"container\">\r\n      <div id=\"customBtn\" className=\"btn login\">\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return <div>{user ? null : butt}</div>;\r\n};\r\n","import {\r\n  AppBar,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport \"./header.scss\";\r\n\r\ninterface Props {\r\n  onDrawerOpened: () => void;\r\n  drawerOpenState: boolean;\r\n}\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Header(props: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: props.drawerOpenState,\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={() => {\r\n            props.onDrawerOpened();\r\n          }}\r\n          edge=\"start\"\r\n          className={clsx(\r\n            classes.menuButton,\r\n            props.drawerOpenState && classes.hide\r\n          )}\r\n        >\r\n          <Menu />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" noWrap>\r\n          UIC Housing Form Visualizer\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport { Student } from \"../../models/student.model\";\r\nimport { SpreadsheetRow } from \"../../services/spreadsheet.model\";\r\nimport { StudentUtilService } from \"../../services/sutdent-util.service\";\r\nimport AppBodyComponent from \"../app-body/app-body.component\";\r\nimport AppDrawer from \"../app-drawer/app-drawer.component\";\r\nimport { GoogleLogin } from \"../gapi-login\";\r\nimport Header from \"../header/header\";\r\nimport \"./app-container.component.scss\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function AppContainer() {\r\n  const classes = useStyles();\r\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\r\n  const [selectedStudents, setSelectedStudents] = useState<Student[]>([]);\r\n  const [allStudents, setAllStudents] = useState<Student[]>([]);\r\n\r\n  const onSheetDataLoaded = (data: SpreadsheetRow[]) => {\r\n    const students = StudentUtilService.toStudent(data);\r\n    setSelectedStudents(students);\r\n    setAllStudents(students);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header\r\n        onDrawerOpened={() => setDrawerOpen(true)}\r\n        drawerOpenState={isDrawerOpen}\r\n      />\r\n      <AppDrawer\r\n        drawerOpenState={isDrawerOpen}\r\n        allStudentsList={allStudents}\r\n        onDrawerClosed={() => setDrawerOpen(false)}\r\n      />\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: isDrawerOpen,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <GoogleLogin onDataLoaded={onSheetDataLoaded} />\r\n        <AppBodyComponent data={selectedStudents} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport AppContainer from './components/app-container/app-container.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}