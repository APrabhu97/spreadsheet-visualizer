{"version":3,"sources":["services/sutdent-util.service.tsx","components/learn-more-modal/learn-more-modal.component.tsx","components/card/card.component.tsx","components/card-container/card-container.component.tsx","components/app-body/app-body.component.tsx","services/filters-util.service.tsx","components/app-drawer/app-drawer.component.tsx","services/spreadsheet.service.tsx","components/gapi-login.tsx","components/header/header.tsx","components/app-container/app-container.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StudentUtilService","cell","formattedValue","trim","split","map","option","cells","id","this","getCellValue","email","name","phone","gender","finalizedUic","commuteTimeOptions","getCellValues","roomType","roommateNumberPreferences","roomNumberPreferences","mixedHouse","roommateSmokes","roommateDrinks","knowsCooking","foodType","roommateLanguagePreference","origin","gradYear","hobbies","extraInfo","visaLocation","company","experience","intrestedAreas","socialMediaLinks","budget","smoke","drink","levelOfStudy","course","roommateSameBranchPreference","data","students","length","forEach","row","idx","values","student","getGeneralFormStudentDetails","push","useStyles","makeStyles","theme","createStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","displayMap","Map","set","LearnMoreModal","props","classes","React","useState","open","setOpen","studentProperties","className","Array","from","key","displayValue","Button","size","onClick","Modal","aria-labelledby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","CardComponent","Card","CardContent","Typography","variant","component","cardView","phoneNumber","emailId","CardActions","CardContainer","cards","cardDetails","card","AppBodyComponent","FiltersUtilService","field","selectedValues","allFilters","filter","isArray","uniq","allStudents","filters","isIncluded","studentValues","some","selectedValue","includes","getDefaultFormFilters","getGeneralFormFilters","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","drawerPaper","drawerHeader","mixins","toolbar","AppDrawer","selectedFilterNames","setSelectedFilterNames","useMemo","getAllFilters","allStudentsList","currentFilters","setCurrentFilters","Drawer","anchor","drawerOpenState","IconButton","onDrawerClosed","ChevronLeft","Divider","InputLabel","Select","labelId","multiple","value","onChange","event","filterNames","target","filterName","find","Boolean","filteredStudents","getFilteredStudents","renderValue","selected","MenuItem","Checkbox","checked","ListItemText","primary","List","ListItem","button","cloneDeep","handleCurrentFilterChange","SpreadsheetService","data$","ReplaySubject","UIC_CS_SHEET","UIC_GENERAL_SHEET","CLIENT_ID","process","SCOPE","getSpreadsheetData","params","spreadsheetId","ranges","includeGridData","gapi","client","sheets","spreadsheets","get","then","response","rowData","result","console","log","next","reason","error","message","asObservable","GoogleLogin","user","setUser","useEffect","a","loadAuth2","auth2","isSignedIn","updateUser","currentUser","attachSignin","document","getElementById","setAuth2","getBasicProfile","getName","profileImg","getImageUrl","getData","loadClientAuth2","API_KEY","init","apiKey","clientId","discoveryDocs","scope","cli","onDataLoaded","element","attachClickHandler","googleUser","JSON","stringify","butt","color","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","Header","AppBar","position","clsx","Toolbar","aria-label","onDrawerOpened","edge","Menu","noWrap","root","drawer","flexShrink","content","flexGrow","contentShift","AppContainer","isDrawerOpen","setDrawerOpen","selectedStudents","setSelectedStudents","setAllStudents","toStudent","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0075f52d.chunk.js","sourcesContent":["import { StudentDetails } from \"../models/student.model\";\r\nimport { SpreadsheetCell, SpreadsheetRow } from \"./spreadsheet.model\";\r\n\r\nexport class StudentUtilService {\r\n  private static getCellValue(cell: SpreadsheetCell): string {\r\n    return cell ? (cell.formattedValue ? cell.formattedValue.trim() : \"\") : \"\";\r\n  }\r\n  private static getCellValues(cell: SpreadsheetCell): string[] {\r\n    return cell\r\n      ? cell.formattedValue\r\n        ? cell.formattedValue.split(\",\").map((option) => option.trim())\r\n        : []\r\n      : [];\r\n  }\r\n\r\n  private static getCSFormStudentDetails(\r\n    cells: SpreadsheetCell[]\r\n  ): StudentDetails {\r\n    return {\r\n      id: this.getCellValue(cells[0]) + this.getCellValue(cells[2]),\r\n      email: this.getCellValue(cells[1]),\r\n      name: this.getCellValue(cells[2]),\r\n      phone: this.getCellValue(cells[3]),\r\n      gender: this.getCellValue(cells[4]),\r\n      finalizedUic: this.getCellValue(cells[5]),\r\n      commuteTimeOptions: this.getCellValues(cells[6]),\r\n      roomType: this.getCellValue(cells[7]),\r\n      roommateNumberPreferences: this.getCellValues(cells[8]),\r\n      roomNumberPreferences: this.getCellValues(cells[9]),\r\n      mixedHouse: this.getCellValue(cells[10]),\r\n      roommateSmokes: this.getCellValue(cells[11]),\r\n      roommateDrinks: this.getCellValue(cells[12]),\r\n      knowsCooking: this.getCellValue(cells[13]),\r\n      foodType: this.getCellValue(cells[14]),\r\n      roommateLanguagePreference: this.getCellValue(cells[16]),\r\n      origin: this.getCellValues(cells[17])[0],\r\n      gradYear: this.getCellValues(cells[17])[1],\r\n      hobbies: this.getCellValue(cells[18]),\r\n      extraInfo: this.getCellValue(cells[19]),\r\n      visaLocation: this.getCellValue(cells[20]),\r\n      company: this.getCellValues(cells[23])[0],\r\n      experience: this.getCellValues(cells[23])[1],\r\n      intrestedAreas: this.getCellValue(cells[24]),\r\n      socialMediaLinks: this.getCellValue(cells[25]),\r\n      budget: this.getCellValue(cells[28]),\r\n      smoke: this.getCellValue(cells[29]),\r\n      drink: this.getCellValue(cells[30]),\r\n      levelOfStudy: \"\",\r\n      course: \"\",\r\n      roommateSameBranchPreference: \"\",\r\n    };\r\n  }\r\n\r\n  private static getGeneralFormStudentDetails(\r\n    cells: SpreadsheetCell[]\r\n  ): StudentDetails {\r\n    return {\r\n      id: this.getCellValue(cells[0]) + this.getCellValue(cells[2]),\r\n      email: this.getCellValue(cells[1]),\r\n      name: this.getCellValue(cells[2]),\r\n      phone: this.getCellValue(cells[3]),\r\n      gender: this.getCellValue(cells[7]),\r\n      roomType: this.getCellValue(cells[8]),\r\n      roommateSameBranchPreference: this.getCellValue(cells[10]),\r\n      roommateNumberPreferences: this.getCellValues(cells[12]),\r\n      roomNumberPreferences: this.getCellValues(cells[11]),\r\n      budget: this.getCellValue(cells[6]),\r\n      smoke: this.getCellValue(cells[16]),\r\n      drink: this.getCellValue(cells[18]),\r\n      course: this.getCellValue(cells[5]),\r\n      levelOfStudy: this.getCellValue(cells[4]),\r\n      roommateSmokes: this.getCellValue(cells[17]),\r\n      roommateDrinks: this.getCellValue(cells[19]),\r\n      knowsCooking: this.getCellValue(cells[15]),\r\n      foodType: this.getCellValue(cells[13]),\r\n      origin: this.getCellValue(cells[20]),\r\n      finalizedUic: \"\",\r\n      commuteTimeOptions: [\"\"],\r\n      mixedHouse: \"\",\r\n      roommateLanguagePreference: \"\",\r\n      gradYear: \"\",\r\n      hobbies: \"\",\r\n      extraInfo: \"\",\r\n      visaLocation: \"\",\r\n      company: \"\",\r\n      experience: \"\",\r\n      intrestedAreas: \"\",\r\n      socialMediaLinks: \"\",\r\n    };\r\n  }\r\n\r\n  public static toStudent(data: SpreadsheetRow[] | undefined): StudentDetails[] {\r\n    const students: StudentDetails[] = [];\r\n    if (data && data.length > 1) {\r\n      //row 0 is names\r\n      //0th element of every row is timestamp\r\n      //every row is 1 student\r\n      data.forEach((row, idx) => {\r\n        const values = row.values;\r\n        if (idx !== 0 && this.getCellValue(values[2])) {\r\n          const student: StudentDetails = this.getGeneralFormStudentDetails(values);\r\n          students.push(student);\r\n        }\r\n      });\r\n    }\r\n    return students;\r\n  }\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { StudentDetails } from \"../../models/student.model\";\r\nimport \"./learn-more-modal.component.scss\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  })\r\n);\r\nconst displayMap = new Map<keyof StudentDetails, string>()\r\n  .set(\"name\", \"Name\")\r\n  .set(\"gender\", \"Gender\")\r\n  .set(\"phone\", \"Phone\")\r\n  .set(\"email\", \"Email\")\r\n  .set(\"origin\", \"City\")\r\n  .set(\"course\", \"Course\")\r\n  .set(\"foodType\", \"Food Type\")\r\n  .set(\"budget\", \"House Budget\")\r\n  .set(\"roomType\", \"Room type Preference\")\r\n  .set(\"roomNumberPreferences\", \"No. of Rooms Preference\")\r\n  .set(\"smoke\", \"Smoking\")\r\n  .set(\"drink\", \"Drinking\");\r\ninterface Props {\r\n  student: StudentDetails;\r\n}\r\nexport default function LearnMoreModal(props: Props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const studentProperties = (\r\n    <div className=\"all-fields\">\r\n      {Array.from(displayMap).map(([key, displayValue]) => {\r\n        return (\r\n          <div className=\"field-container\" key={key}>\r\n            <span className=\"key-title\">{displayValue}</span>\r\n            <span className=\"key-value\">{props.student[key]}</span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" onClick={handleOpen}>\r\n        Learn More\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Student Details</h2>\r\n            {studentProperties}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, CardActions, CardContent, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { CardDetail } from \"./card.model\";\r\nimport \"./card.component.scss\";\r\nimport LearnMoreModal from \"../learn-more-modal/learn-more-modal.component\";\r\ninterface Props {\r\n  cardView: CardDetail;\r\n}\r\n\r\nexport default function CardComponent(props: Props) {\r\n  return (\r\n    <Card className=\"card-detail\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Name\r\n        </Typography>\r\n        {props.cardView.name}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Gender\r\n        </Typography>\r\n        {props.cardView.gender}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Number\r\n        </Typography>\r\n        {props.cardView.phoneNumber}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Email\r\n        </Typography>\r\n        {props.cardView.emailId}\r\n      </CardContent>\r\n      <CardActions>\r\n        <LearnMoreModal student={props.cardView.student}/>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CardComponent from \"../card/card.component\";\r\nimport { CardDetail } from \"../card/card.model\";\r\nimport \"./card-container.component.scss\";\r\n\r\ninterface Props {\r\n  cardDetails: CardDetail[] | undefined;\r\n}\r\n\r\nexport default function CardContainer(props: Props) {\r\n  const cards = props.cardDetails?.map((card) => (\r\n    <span className=\"card\" key={card.id+card.name}>\r\n      <CardComponent cardView={card} />\r\n    </span>\r\n  ));\r\n  return <div className=\"card-container\">{cards}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { StudentDetails } from \"../../models/student.model\";\r\nimport CardContainer from \"../card-container/card-container.component\";\r\nimport { CardDetail } from \"../card/card.model\";\r\n\r\ninterface Props {\r\n  data: StudentDetails[] | undefined;\r\n}\r\n\r\nexport default function AppBodyComponent(props: Props) {\r\n  const toCardDetails = (\r\n    data: StudentDetails[] | undefined\r\n  ): CardDetail[] | undefined => {\r\n    return data?.map((student) => {\r\n      return {\r\n        id: student.id,\r\n        emailId: student.email,\r\n        name: student.name,\r\n        phoneNumber: student.phone,\r\n        gender: student.gender,\r\n        student: student\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <CardContainer cardDetails={toCardDetails(props.data)} />\r\n    </div>\r\n  );\r\n}\r\n","import uniq from \"lodash/uniq\";\r\nimport { AllFiltersOption } from \"../models/filters.model\";\r\nimport { StudentDetails } from \"../models/student.model\";\r\n\r\nexport class FiltersUtilService {\r\n  private static getCSFormFilters(): AllFiltersOption[] {\r\n    return [\r\n      {\r\n        displayValue: \"Commute Time\",\r\n        values: [],\r\n        field: \"commuteTimeOptions\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Mixed Accommodation\",\r\n        values: [],\r\n        field: \"mixedHouse\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Roommate language preference\",\r\n        values: [],\r\n        field: \"roommateLanguagePreference\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Grad year\",\r\n        values: [],\r\n        field: \"gradYear\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Hobbies\",\r\n        values: [],\r\n        field: \"hobbies\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Company\",\r\n        values: [],\r\n        field: \"company\",\r\n        selectedValues: [],\r\n      },\r\n    ];\r\n  }\r\n\r\n  private static getGeneralFormFilters(): AllFiltersOption[] {\r\n    return [\r\n      {\r\n        displayValue: \"Level of Study\",\r\n        values: [],\r\n        field: \"levelOfStudy\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Course\",\r\n        values: [],\r\n        field: \"course\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Roommate should be in same branch?\",\r\n        values: [],\r\n        field: \"roommateSameBranchPreference\",\r\n        selectedValues: [],\r\n      },\r\n    ];\r\n  }\r\n\r\n  private static getDefaultFormFilters(): AllFiltersOption[] {\r\n    return [\r\n      {\r\n        displayValue: \"Gender\",\r\n        values: [],\r\n        field: \"gender\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Room Type\",\r\n        values: [],\r\n        field: \"roomType\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"No. of Rooms\",\r\n        values: [],\r\n        field: \"roomNumberPreferences\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"No. of Roommates\",\r\n        values: [],\r\n        field: \"roommateNumberPreferences\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Roommate smoking preference\",\r\n        values: [],\r\n        field: \"roommateSmokes\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Roommate drinking preference\",\r\n        values: [],\r\n        field: \"roommateDrinks\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Cooking Knowledge\",\r\n        values: [],\r\n        field: \"knowsCooking\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Food Choice\",\r\n        values: [],\r\n        field: \"foodType\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Origin\",\r\n        values: [],\r\n        field: \"origin\",\r\n        selectedValues: [],\r\n      },\r\n      {\r\n        displayValue: \"Housing Budget\",\r\n        values: [],\r\n        field: \"budget\",\r\n        selectedValues: [],\r\n      },\r\n    ];\r\n  }\r\n\r\n  private static allFilters: AllFiltersOption[] = [\r\n    ...FiltersUtilService.getDefaultFormFilters(),\r\n    ...FiltersUtilService.getGeneralFormFilters(),\r\n  ];\r\n\r\n  public static getAllFilters(students: StudentDetails[]): AllFiltersOption[] {\r\n    students.forEach((student) => {\r\n      this.allFilters.forEach((filter) => {\r\n        Array.isArray(student[filter.field])\r\n          ? filter.values.push(...(student[filter.field] as any[]))\r\n          : filter.values.push(student[filter.field] as string);\r\n      });\r\n    });\r\n    this.allFilters.forEach((filter) => {\r\n      filter.values = uniq(filter.values);\r\n    });\r\n    return this.allFilters;\r\n  }\r\n\r\n  public static getFilteredStudents(\r\n    allStudents: StudentDetails[],\r\n    filters: AllFiltersOption[]\r\n  ): StudentDetails[] {\r\n    if (filters.length === 0) {\r\n      return allStudents;\r\n    }\r\n    return allStudents.filter((student) => {\r\n      let isIncluded = true;\r\n      filters.forEach((filter) => {\r\n        const studentValues = student[filter.field];\r\n        if (filter.selectedValues.length === 0) {\r\n          return;\r\n        }\r\n        if (Array.isArray(studentValues)) {\r\n          isIncluded =\r\n            isIncluded &&\r\n            filter.selectedValues.some((selectedValue) =>\r\n              studentValues.includes(selectedValue)\r\n            );\r\n        } else {\r\n          isIncluded =\r\n            isIncluded &&\r\n            filter.selectedValues.includes(studentValues as string);\r\n        }\r\n        if (!isIncluded) {\r\n          return;\r\n        }\r\n      });\r\n      if (isIncluded) {\r\n        return student;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Checkbox,\r\n  createStyles,\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  InputLabel,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { ChevronLeft } from \"@material-ui/icons\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { AllFiltersOption } from \"../../models/filters.model\";\r\nimport { StudentDetails } from \"../../models/student.model\";\r\nimport { FiltersUtilService } from \"../../services/filters-util.service\";\r\nimport \"./app-drawer.component.scss\";\r\ninterface Props {\r\n  onDrawerClosed: () => void;\r\n  drawerOpenState: boolean;\r\n  allStudentsList: StudentDetails[];\r\n  filteredStudents: (students: StudentDetails[]) => void;\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function AppDrawer(props: Props) {\r\n  const classes = useStyles();\r\n  const [selectedFilterNames, setSelectedFilterNames] = useState<string[]>([]);\r\n  const allFilters = useMemo(\r\n    () => FiltersUtilService.getAllFilters(props.allStudentsList),\r\n    [props.allStudentsList]\r\n  );\r\n\r\n  const [currentFilters, setCurrentFilters] = useState<AllFiltersOption[]>([]);\r\n\r\n  const handleAllFilterChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>\r\n  ) => {\r\n    const filterNames = event.target.value as string[];\r\n    const filters = filterNames\r\n      .map((filterName) => {\r\n        return (\r\n          currentFilters.find((filter) => filter.displayValue === filterName) ||\r\n          allFilters.find((filter) => filter.displayValue === filterName)!\r\n        );\r\n      })\r\n      .filter(Boolean);\r\n    const filteredStudents = FiltersUtilService.getFilteredStudents(\r\n      props.allStudentsList,\r\n      filters\r\n    );\r\n    setSelectedFilterNames(filterNames);\r\n    setCurrentFilters(filters);\r\n    props.filteredStudents(filteredStudents);\r\n  };\r\n\r\n  const handleCurrentFilterChange = (\r\n    event: React.ChangeEvent<{ value: unknown }>,\r\n    name: string\r\n  ) => {\r\n    const filter = currentFilters.find((filter) => filter.field === name)!;\r\n    filter.selectedValues = event.target.value as string[];\r\n    const filters = cloneDeep(currentFilters);\r\n    const filteredStudents = FiltersUtilService.getFilteredStudents(\r\n      props.allStudentsList,\r\n      filters\r\n    );\r\n    setCurrentFilters(filters);\r\n    props.filteredStudents(filteredStudents);\r\n  };\r\n  return (\r\n    <Drawer\r\n      className=\"drawer\"\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={props.drawerOpenState}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={() => props.onDrawerClosed()}>\r\n          <ChevronLeft />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <div className=\"all-filter-container\">\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Select Filters</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-checkbox-label\"\r\n          id=\"demo-mutiple-checkbox\"\r\n          multiple\r\n          className=\"all-filter-select\"\r\n          value={selectedFilterNames}\r\n          onChange={handleAllFilterChange}\r\n          renderValue={(selected) => (selected as []).length + \" selected\"}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allFilters.map((filter) => (\r\n            <MenuItem key={filter.field} value={filter.displayValue}>\r\n              <Checkbox\r\n                checked={selectedFilterNames.includes(filter.displayValue)}\r\n              />\r\n              <ListItemText primary={filter.displayValue} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {currentFilters.map((filter) => (\r\n          <ListItem button key={filter.field}>\r\n            <InputLabel id=\"filter.displayValue\">\r\n              {filter.displayValue}\r\n            </InputLabel>\r\n            <Select\r\n              labelId={filter.displayValue}\r\n              id={filter.field}\r\n              multiple\r\n              className=\"all-filter-select\"\r\n              value={filter.selectedValues}\r\n              onChange={(event) =>\r\n                handleCurrentFilterChange(event, filter.field)\r\n              }\r\n              renderValue={(selected) => (selected as []).length + \" selected\"}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {filter.values.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  <Checkbox checked={filter.selectedValues.includes(option)} />\r\n                  <ListItemText primary={option} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n","import { gapi } from \"gapi-script\";\r\nimport { Observable, ReplaySubject } from \"rxjs\";\r\nimport { SpreadsheetRow } from \"./spreadsheet.model\";\r\n\r\nexport class SpreadsheetService {\r\n  private data$ = new ReplaySubject<SpreadsheetRow[]>();\r\n  UIC_CS_SHEET = \"1ysrPxFihdRTRTHc4tKQZnmjCeq_JoSqEK4IE9EPnJX8\";\r\n  UIC_GENERAL_SHEET = \"1iRbHoRSJaKoJNDCKeTZ2kREXPHQL7qZma73-AfQReO0\";\r\n  CLIENT_ID = `${process.env.REACT_APP_SHEET_CLIENT_ID}`;\r\n  SCOPE = \"https://www.googleapis.com/auth/spreadsheets.readonly\";\r\n  //gapiClient = loadClientAuth2(gapi, this.CLIENT_ID, this.SCOPE);\r\n  getSpreadsheetData = (): Observable<SpreadsheetRow[]> => {\r\n    const params = {\r\n      spreadsheetId: this.UIC_GENERAL_SHEET, //given in url of the sheet\r\n      ranges: [\"Form Responses 1\"], //names of the page(given in the bottom of google sheets).\r\n      includeGridData: true,\r\n    };\r\n    const request = gapi.client.sheets.spreadsheets.get(params);\r\n    request.then(\r\n      (response: any) => {\r\n        const rowData: SpreadsheetRow[] =\r\n          response?.result?.sheets[0]?.data[0]?.rowData;\r\n        console.log(rowData);\r\n        this.data$.next(rowData);\r\n      },\r\n      (reason: any) => {\r\n        console.error(\"error: \" + reason.result.error.message);\r\n      }\r\n    );\r\n    return this.data$.asObservable();\r\n  };\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { gapi, loadAuth2, loadClientAuth2 } from \"gapi-script\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SpreadsheetRow } from \"../services/spreadsheet.model\";\r\nimport { SpreadsheetService } from \"../services/spreadsheet.service\";\r\n\r\ninterface Props {\r\n  onDataLoaded: (data: SpreadsheetRow[]) => void;\r\n}\r\nexport const GoogleLogin = (props: Props) => {\r\n  const [user, setUser] = useState<any>(null);\r\n  const service = new SpreadsheetService();\r\n  useEffect(() => {\r\n    const setAuth2 = async () => {\r\n      const auth2 = await loadAuth2(\r\n        gapi,\r\n        process.env.REACT_APP_SHEET_CLIENT_ID!,\r\n        process.env.REACT_APP_SHEET_SCOPE!\r\n      );\r\n      if (auth2.isSignedIn.get()) {\r\n        updateUser(auth2.currentUser.get());\r\n      } else {\r\n        attachSignin(document.getElementById(\"customBtn\"), auth2);\r\n      }\r\n    };\r\n    setAuth2();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const setAuth2 = async () => {\r\n        const auth2 = await loadAuth2(\r\n          gapi,\r\n          process.env.REACT_APP_SHEET_CLIENT_ID!,\r\n          process.env.REACT_APP_SHEET_SCOPE!\r\n        );\r\n        attachSignin(document.getElementById(\"customBtn\"), auth2);\r\n      };\r\n      setAuth2();\r\n    }\r\n  }, [user]);\r\n\r\n  const updateUser = (currentUser: any) => {\r\n    const name = currentUser.getBasicProfile().getName();\r\n    const profileImg = currentUser.getBasicProfile().getImageUrl();\r\n    setUser({\r\n      name: name,\r\n      profileImg: profileImg,\r\n    });\r\n    getData();\r\n  };\r\n\r\n  const getData = async () => {\r\n    const gapiClient = await loadClientAuth2(\r\n      gapi,\r\n      process.env.REACT_APP_SHEET_CLIENT_ID!,\r\n      process.env.REACT_APP_SHEET_SCOPE!\r\n    );\r\n    const UIC_CS_SHEET = \"1ysrPxFihdRTRTHc4tKQZnmjCeq_JoSqEK4IE9EPnJX8\";\r\n    const UIC_GENERAL_SHEET = \"1iRbHoRSJaKoJNDCKeTZ2kREXPHQL7qZma73-AfQReO0\";\r\n    const params = {\r\n      spreadsheetId: UIC_GENERAL_SHEET, //given in url of the sheet\r\n      ranges: [\"Form Responses 1\"], //names of the page(given in the bottom of google sheets).\r\n      includeGridData: true,\r\n    };\r\n    const API_KEY = `${process.env.REACT_APP_SHEET_API_KEY}`;\r\n    const CLIENT_ID = `${process.env.REACT_APP_SHEET_CLIENT_ID}`;\r\n    gapi.client\r\n      ?.init({\r\n        apiKey: API_KEY,\r\n        clientId: CLIENT_ID,\r\n        discoveryDocs: [\r\n          \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\r\n        ],\r\n        scope: process.env.REACT_APP_SHEET_SCOPE!,\r\n      })\r\n      .then((cli: any) => {\r\n        const req = gapi.client.sheets.spreadsheets.get(params);\r\n        req.then((response: any) => {\r\n          const rowData: SpreadsheetRow[] =\r\n            response?.result?.sheets[0]?.data[0]?.rowData;\r\n          props.onDataLoaded(rowData);\r\n        });\r\n      });\r\n\r\n    /*     service\r\n      .getSpreadsheetData()\r\n      .pipe(tap((data) => props.onDataLoaded(data)))\r\n      .subscribe(); */\r\n  };\r\n\r\n  const attachSignin = (element: any, auth2: any) => {\r\n    auth2.attachClickHandler(\r\n      element,\r\n      {},\r\n      (googleUser: any) => {\r\n        updateUser(googleUser);\r\n      },\r\n      (error: any) => {\r\n        console.log(JSON.stringify(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  const butt = (\r\n    <div className=\"container\">\r\n      <div id=\"customBtn\" className=\"btn login\">\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return <div>{user ? null : butt}</div>;\r\n};\r\n","import {\r\n  AppBar,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport \"./header.scss\";\r\n\r\ninterface Props {\r\n  onDrawerOpened: () => void;\r\n  drawerOpenState: boolean;\r\n}\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Header(props: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarShift]: props.drawerOpenState,\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={() => {\r\n            props.onDrawerOpened();\r\n          }}\r\n          edge=\"start\"\r\n          className={clsx(\r\n            classes.menuButton,\r\n            props.drawerOpenState && classes.hide\r\n          )}\r\n        >\r\n          <Menu />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" noWrap>\r\n          UIC Housing Form Visualizer\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport { StudentDetails } from \"../../models/student.model\";\r\nimport { SpreadsheetRow } from \"../../services/spreadsheet.model\";\r\nimport { StudentUtilService } from \"../../services/sutdent-util.service\";\r\nimport AppBodyComponent from \"../app-body/app-body.component\";\r\nimport AppDrawer from \"../app-drawer/app-drawer.component\";\r\nimport { GoogleLogin } from \"../gapi-login\";\r\nimport Header from \"../header/header\";\r\nimport \"./app-container.component.scss\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function AppContainer() {\r\n  const classes = useStyles();\r\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\r\n  const [selectedStudents, setSelectedStudents] = useState<StudentDetails[]>([]);\r\n  const [allStudents, setAllStudents] = useState<StudentDetails[]>([]);\r\n\r\n  const onSheetDataLoaded = (data: SpreadsheetRow[]) => {\r\n    const students = StudentUtilService.toStudent(data);\r\n    setSelectedStudents(students);\r\n    setAllStudents(students);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header\r\n        onDrawerOpened={() => setDrawerOpen(true)}\r\n        drawerOpenState={isDrawerOpen}\r\n      />\r\n      <AppDrawer\r\n        drawerOpenState={isDrawerOpen}\r\n        allStudentsList={allStudents}\r\n        onDrawerClosed={() => setDrawerOpen(false)}\r\n        filteredStudents={(students) => setSelectedStudents(students)}\r\n      />\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: isDrawerOpen,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <GoogleLogin onDataLoaded={onSheetDataLoaded} />\r\n        <AppBodyComponent data={selectedStudents} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport AppContainer from './components/app-container/app-container.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}